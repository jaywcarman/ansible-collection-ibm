---
- name: POWER VSI Creation Demo
  hosts: localhost
  collections:
   - ibmcloud.ibmcollection
  vars:
    ibmcloud_api_key: "BhhB4iBLDCmS9yi8IHbmL2CGSlt83ceWnwtcS6k6C1iJ"
    pi_name: ansible-demo-power-vm
    sys_type: s922
    pi_image: "7200-04-01"
    proc_type: shared
    processors: "0.25"
    memory: "2"
    network: "8570d91f-13ce-4d47-852e-56e4337de7af"
    pi_cloud_instance_id: "4a6de100-2f3e-4277-b4d1-e715a210535f"
    ssh_public_key: "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDcCfDfVQ0aZCrvRzVzt32tY+/bTP/B4al5r+X1i9QIuHsm80XLzX8U8ECp3tfCDG/PikEktbcV1bKuhCCMmzix3aNtaVLev27a4EYUIB5PZMN6TKVjGVu9TKn7WAE4m5J41LH2HP5HzFsy8iPWqZmW4U395V5JUKntETHQE62vgCaYq1foSwgQthQGhGUe5PF3Cro5Enl8il09rNLJvrdkVrxgeOkdQ5KBGT1u7GCXX3Esysh+GcUjIUyxVnnfQZ3Aaw2e0wc1zIqTX4DA8KzCsvj3uTJN/keK5vGvVDMV7xwrKCwHK3JGMAXA+zAi4/zXY1VvfNGQVjFbIBED6IN/ root@sc-terraform-t2"
  tasks:
    - name: Check for existing SSH Key
      ibm_pi_key_info:
        pi_key_name: "{{ pi_name }}-ssh-key"
        ibmcloud_api_key: "BhhB4iBLDCmS9yi8IHbmL2CGSlt83ceWnwtcS6k6C1iJ"
        pi_cloud_instance_id: "{{ pi_cloud_instance_id }}"
      failed_when:
        - pi_ssh_key_existing_output.rc != 0
        - '"does not exist" not in pi_ssh_key_existing_output.stderr'
      register: pi_ssh_key_existing_output

    - name: Save existing SSH Key as fact
      set_fact:
        cacheable: True
        pi_ssh_key: "{{ pi_ssh_key_existing_output.resource }}"
      when: pi_ssh_key_existing_output.resource.id is defined

    - name: Add new SSH Key
      ibm_pi_key:
        pi_key_name: "{{ pi_name }}-ssh-key"
        pi_ssh_key: "{{ ssh_public_key }}"
        pi_cloud_instance_id: "{{ pi_cloud_instance_id }}"
        ibmcloud_api_key: "BhhB4iBLDCmS9yi8IHbmL2CGSlt83ceWnwtcS6k6C1iJ"
      register: pi_ssh_key_create_output
      when: pi_ssh_key_existing_output.resource.id is not defined

    - name: Save new SSH Key as fact
      set_fact:
        cacheable: True
        pi_ssh_key: "{{ pi_ssh_key_create_output.resource }}"
      when: pi_ssh_key_existing_output.resource.id is not defined

    - name: Retrieve image list
      ibm_pi_images_info:
        pi_cloud_instance_id: "{{ pi_cloud_instance_id }}"
        ibmcloud_api_key: "BhhB4iBLDCmS9yi8IHbmL2CGSlt83ceWnwtcS6k6C1iJ"
      register: images_list

    - name: Set VM image name/id dictionary fact
      set_fact:
        image_dict: "{{ images_list.resource.image_info |
                        items2dict(key_name='name',
                        value_name='id') }}"

    - name: Check for existing Virtual Server Instance
      ibm_pi_instance_info:
        pi_instance_name: "{{ pi_name }}"
        pi_cloud_instance_id: "{{ pi_cloud_instance_id }}"
        ibmcloud_api_key: "BhhB4iBLDCmS9yi8IHbmL2CGSlt83ceWnwtcS6k6C1iJ"
      failed_when:
        - pi_instance_existing_output.rc != 0
        - '"does not exist" not in pi_instance_existing_output.stderr'
      register: pi_instance_existing_output

    - name: Save existing Power VSI fact
      set_fact:
        cacheable: True
        pi_instance: "{{ pi_instance_existing_output.resource }}"
      when: pi_instance_existing_output.rc == 0

    - name: Create a POWER Virtual Server Instance
      ibm_pi_instance:
        state: available
        ibmcloud_api_key: "BhhB4iBLDCmS9yi8IHbmL2CGSlt83ceWnwtcS6k6C1iJ"
        pi_memory: "{{ memory }}"
        pi_processors: "{{ processors }}"
        pi_instance_name: "{{ pi_name }}"
        pi_proc_type: "{{ proc_type }}"
        pi_image_id: "{{ image_dict[pi_image] }}"
        pi_volume_ids: []
        pi_network_ids: "{{ network }}"
        pi_key_pair_name: "{{ pi_ssh_key.pi_key_name }}"
        pi_sys_type: "{{ sys_type }}"
        pi_replication_policy: none
        pi_replication_scheme: suffix
        pi_replicants: "1"
        pi_cloud_instance_id: "{{ pi_cloud_instance_id }}"
        id: "{{ pi_instance.resource.id | default(omit) }}"
      register: pi_instance_create_output
      when: pi_instance_existing_output.rc != 0

    - name: Save new Power VSI fact
      set_fact:
        cacheable: True
        pi_instance: "{{ pi_instance_create_output.resource }}"
      when: pi_instance_create_output.resource is defined

    - name: Print Public IP Address
      debug:
        var: pi_instance.addresses[0].external_ip

    - name: Add VSI to Ansible inventory
      add_host:
        name: "{{ pi_instance.addresses[0].external_ip }}"
        ansible_user: root
        groups: new_vsi
        ansible_ssh_extra_args: -o StrictHostKeyChecking=no

- name: Connect to VSI
  hosts: new_vsi
  gather_facts: False
  tasks:
    - name: Wait for VSI to become reachable over SSH
      wait_for_connection:

    - name: Collect OS login message
      command: cat /etc/motd
      register: os_motd

    - name: Print MOTD
      debug:
        var: os_motd.stdout_lines
